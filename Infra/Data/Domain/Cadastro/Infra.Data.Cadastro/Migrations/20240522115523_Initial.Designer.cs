// <auto-generated />
using System;
using Infra.Data.Cadastro.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infra.Data.Cadastro.Migrations
{
    [DbContext(typeof(CadastroContext))]
    [Migration("20240522115523_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.3.24172.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Cadastro.CodigoDiscagem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Cod_CodigoDiscagemId");

                    b.Property<int>("Ddd")
                        .HasMaxLength(3)
                        .HasColumnType("integer")
                        .HasColumnName("Cod_Ddd");

                    b.Property<Guid>("RegiaoId")
                        .HasColumnType("uuid")
                        .HasColumnName("Reg_RegiaoId");

                    b.HasKey("Id");

                    b.HasIndex("RegiaoId");

                    b.ToTable("Cod_CodigoDiscagem", "Cadastro");
                });

            modelBuilder.Entity("Domain.Cadastro.Contato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Con_ContatoId");

                    b.Property<Guid>("CodigoDiscagemId")
                        .HasColumnType("uuid")
                        .HasColumnName("Cod_CodigoDiscagemId");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Con_Email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Con_Nome");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Con_Telefone");

                    b.HasKey("Id");

                    b.HasIndex("CodigoDiscagemId");

                    b.ToTable("Con_Contato", "Cadastro");
                });

            modelBuilder.Entity("Domain.Cadastro.Regiao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Reg_RegiaoId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Reg_Nome");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Reg_Sigla");

                    b.HasKey("Id");

                    b.ToTable("Reg_Regiao", "Cadastro");
                });

            modelBuilder.Entity("Domain.Cadastro.CodigoDiscagem", b =>
                {
                    b.HasOne("Domain.Cadastro.Regiao", "Regiao")
                        .WithMany("CodigosDiscagem")
                        .HasForeignKey("RegiaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Regiao");
                });

            modelBuilder.Entity("Domain.Cadastro.Contato", b =>
                {
                    b.HasOne("Domain.Cadastro.CodigoDiscagem", "CodigoDiscagem")
                        .WithMany("Contatos")
                        .HasForeignKey("CodigoDiscagemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CodigoDiscagem");
                });

            modelBuilder.Entity("Domain.Cadastro.CodigoDiscagem", b =>
                {
                    b.Navigation("Contatos");
                });

            modelBuilder.Entity("Domain.Cadastro.Regiao", b =>
                {
                    b.Navigation("CodigosDiscagem");
                });
#pragma warning restore 612, 618
        }
    }
}
