volumes:
    prometheus_data: {}

services:
  #Servidor de monitoramento Prometheus
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    networks:
      - metrics
    restart: always

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - metrics
    restart: always
    deploy:
      mode: global

  #Servi√ßo de monitoramento Grafana
  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    environment:
      -  GF_SECURITY_ADMIN_PASSWORD=admin
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - metrics
    depends_on:
      - prometheus

networks:
  metrics: